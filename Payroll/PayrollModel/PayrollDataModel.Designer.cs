//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Caste_Religion", "Religion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.Religion), "Caste", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Caste), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Employee_Caste", "Caste", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.Caste), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Employee), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Employee_Caste1", "Caste", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollModel.Caste), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Employee), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_District_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.Country), "District", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.District), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_State_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.Country), "State", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.State), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Department_DepartmentType", "DepartmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.DepartmentType), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Department), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Designation_DesignationType", "DesignationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.DesignationType), "Designation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Designation), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_District_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.State), "District", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.District), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Employee_EmployeeType", "EmployeeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.EmployeeType), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Employee), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Employee_Religion", "Religion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.Religion), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Employee), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Employee_Religion1", "Religion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollModel.Religion), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Employee), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_EmpNominee_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.Employee), "EmpNominee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.EmpNominee), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Institution_InstitutionType", "InstitutionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.InstitutionType), "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Institution), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_InstitutionBranch_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.Institution), "InstitutionBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.InstitutionBranch), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Department_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.Company), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Department), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Organisation_OrganisationType1", "CompanyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.CompanyType), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Company), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_OrganisationBranch_Organisation1", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.Company), "CompanyBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.CompanyBranch), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Department_CompanyBranch", "CompanyBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.CompanyBranch), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Department), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Organisation_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollModel.Contact), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Company), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_OrganisationBranch_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollModel.Contact), "CompanyBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.CompanyBranch), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_Employee_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollModel.Contact), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.Employee), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_InstitutionBranch_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PayrollModel.Contact), "InstitutionBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.InstitutionBranch), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_PayGroup_PayRevision", "PayRevision", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.PayRevision), "PayGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.PayGroup), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_PayScale_PayGroup", "PayGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.PayGroup), "PayScale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.PayScale), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_PayStage_PayGroup", "PayGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.PayGroup), "PayStage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.PayStage), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_PayScale_PayRevision", "PayRevision", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.PayRevision), "PayScale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.PayScale), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_PayStage_PayRevision", "PayRevision", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.PayRevision), "PayStage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.PayStage), true)]
[assembly: EdmRelationshipAttribute("Payroll_Model", "FK_PayStage_PayScale", "PayScale", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PayrollModel.PayScale), "PayStage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PayrollModel.PayStage), true)]

#endregion

namespace PayrollModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Payroll_Context : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Payroll_Context object using the connection string found in the 'Payroll_Context' section of the application configuration file.
        /// </summary>
        public Payroll_Context() : base("name=Payroll_Context", "Payroll_Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Payroll_Context object.
        /// </summary>
        public Payroll_Context(string connectionString) : base(connectionString, "Payroll_Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Payroll_Context object.
        /// </summary>
        public Payroll_Context(EntityConnection connection) : base(connection, "Payroll_Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Caste> Castes
        {
            get
            {
                if ((_Castes == null))
                {
                    _Castes = base.CreateObjectSet<Caste>("Castes");
                }
                return _Castes;
            }
        }
        private ObjectSet<Caste> _Castes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DepartmentType> DepartmentTypes
        {
            get
            {
                if ((_DepartmentTypes == null))
                {
                    _DepartmentTypes = base.CreateObjectSet<DepartmentType>("DepartmentTypes");
                }
                return _DepartmentTypes;
            }
        }
        private ObjectSet<DepartmentType> _DepartmentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Designation> Designations
        {
            get
            {
                if ((_Designations == null))
                {
                    _Designations = base.CreateObjectSet<Designation>("Designations");
                }
                return _Designations;
            }
        }
        private ObjectSet<Designation> _Designations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DesignationType> DesignationTypes
        {
            get
            {
                if ((_DesignationTypes == null))
                {
                    _DesignationTypes = base.CreateObjectSet<DesignationType>("DesignationTypes");
                }
                return _DesignationTypes;
            }
        }
        private ObjectSet<DesignationType> _DesignationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<District> Districts
        {
            get
            {
                if ((_Districts == null))
                {
                    _Districts = base.CreateObjectSet<District>("Districts");
                }
                return _Districts;
            }
        }
        private ObjectSet<District> _Districts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeType> EmployeeTypes
        {
            get
            {
                if ((_EmployeeTypes == null))
                {
                    _EmployeeTypes = base.CreateObjectSet<EmployeeType>("EmployeeTypes");
                }
                return _EmployeeTypes;
            }
        }
        private ObjectSet<EmployeeType> _EmployeeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpNominee> EmpNominees
        {
            get
            {
                if ((_EmpNominees == null))
                {
                    _EmpNominees = base.CreateObjectSet<EmpNominee>("EmpNominees");
                }
                return _EmpNominees;
            }
        }
        private ObjectSet<EmpNominee> _EmpNominees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Grade> Grades
        {
            get
            {
                if ((_Grades == null))
                {
                    _Grades = base.CreateObjectSet<Grade>("Grades");
                }
                return _Grades;
            }
        }
        private ObjectSet<Grade> _Grades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Institution> Institutions
        {
            get
            {
                if ((_Institutions == null))
                {
                    _Institutions = base.CreateObjectSet<Institution>("Institutions");
                }
                return _Institutions;
            }
        }
        private ObjectSet<Institution> _Institutions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstitutionBranch> InstitutionBranches
        {
            get
            {
                if ((_InstitutionBranches == null))
                {
                    _InstitutionBranches = base.CreateObjectSet<InstitutionBranch>("InstitutionBranches");
                }
                return _InstitutionBranches;
            }
        }
        private ObjectSet<InstitutionBranch> _InstitutionBranches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstitutionType> InstitutionTypes
        {
            get
            {
                if ((_InstitutionTypes == null))
                {
                    _InstitutionTypes = base.CreateObjectSet<InstitutionType>("InstitutionTypes");
                }
                return _InstitutionTypes;
            }
        }
        private ObjectSet<InstitutionType> _InstitutionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PromotionType> PromotionTypes
        {
            get
            {
                if ((_PromotionTypes == null))
                {
                    _PromotionTypes = base.CreateObjectSet<PromotionType>("PromotionTypes");
                }
                return _PromotionTypes;
            }
        }
        private ObjectSet<PromotionType> _PromotionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Religion> Religions
        {
            get
            {
                if ((_Religions == null))
                {
                    _Religions = base.CreateObjectSet<Religion>("Religions");
                }
                return _Religions;
            }
        }
        private ObjectSet<Religion> _Religions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyBranch> CompanyBranches
        {
            get
            {
                if ((_CompanyBranches == null))
                {
                    _CompanyBranches = base.CreateObjectSet<CompanyBranch>("CompanyBranches");
                }
                return _CompanyBranches;
            }
        }
        private ObjectSet<CompanyBranch> _CompanyBranches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyType> CompanyTypes
        {
            get
            {
                if ((_CompanyTypes == null))
                {
                    _CompanyTypes = base.CreateObjectSet<CompanyType>("CompanyTypes");
                }
                return _CompanyTypes;
            }
        }
        private ObjectSet<CompanyType> _CompanyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayGroup> PayGroups
        {
            get
            {
                if ((_PayGroups == null))
                {
                    _PayGroups = base.CreateObjectSet<PayGroup>("PayGroups");
                }
                return _PayGroups;
            }
        }
        private ObjectSet<PayGroup> _PayGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayRevision> PayRevisions
        {
            get
            {
                if ((_PayRevisions == null))
                {
                    _PayRevisions = base.CreateObjectSet<PayRevision>("PayRevisions");
                }
                return _PayRevisions;
            }
        }
        private ObjectSet<PayRevision> _PayRevisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayScale> PayScales
        {
            get
            {
                if ((_PayScales == null))
                {
                    _PayScales = base.CreateObjectSet<PayScale>("PayScales");
                }
                return _PayScales;
            }
        }
        private ObjectSet<PayScale> _PayScales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PayStage> PayStages
        {
            get
            {
                if ((_PayStages == null))
                {
                    _PayStages = base.CreateObjectSet<PayStage>("PayStages");
                }
                return _PayStages;
            }
        }
        private ObjectSet<PayStage> _PayStages;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Castes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCastes(Caste caste)
        {
            base.AddObject("Castes", caste);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DepartmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartmentTypes(DepartmentType departmentType)
        {
            base.AddObject("DepartmentTypes", departmentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Designations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDesignations(Designation designation)
        {
            base.AddObject("Designations", designation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DesignationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDesignationTypes(DesignationType designationType)
        {
            base.AddObject("DesignationTypes", designationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Districts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDistricts(District district)
        {
            base.AddObject("Districts", district);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeTypes(EmployeeType employeeType)
        {
            base.AddObject("EmployeeTypes", employeeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpNominees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpNominees(EmpNominee empNominee)
        {
            base.AddObject("EmpNominees", empNominee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Grades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGrades(Grade grade)
        {
            base.AddObject("Grades", grade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Institutions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutions(Institution institution)
        {
            base.AddObject("Institutions", institution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstitutionBranches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutionBranches(InstitutionBranch institutionBranch)
        {
            base.AddObject("InstitutionBranches", institutionBranch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstitutionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutionTypes(InstitutionType institutionType)
        {
            base.AddObject("InstitutionTypes", institutionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PromotionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPromotionTypes(PromotionType promotionType)
        {
            base.AddObject("PromotionTypes", promotionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Religions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReligions(Religion religion)
        {
            base.AddObject("Religions", religion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyBranches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyBranches(CompanyBranch companyBranch)
        {
            base.AddObject("CompanyBranches", companyBranch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyTypes(CompanyType companyType)
        {
            base.AddObject("CompanyTypes", companyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayGroups(PayGroup payGroup)
        {
            base.AddObject("PayGroups", payGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayRevisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayRevisions(PayRevision payRevision)
        {
            base.AddObject("PayRevisions", payRevision);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayScales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayScales(PayScale payScale)
        {
            base.AddObject("PayScales", payScale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PayStages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayStages(PayStage payStage)
        {
            base.AddObject("PayStages", payStage);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Caste")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Caste : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Caste object.
        /// </summary>
        /// <param name="casteId">Initial value of the CasteId property.</param>
        /// <param name="casteName">Initial value of the CasteName property.</param>
        /// <param name="religionId">Initial value of the ReligionId property.</param>
        public static Caste CreateCaste(global::System.Int32 casteId, global::System.String casteName, global::System.Int32 religionId)
        {
            Caste caste = new Caste();
            caste.CasteId = casteId;
            caste.CasteName = casteName;
            caste.ReligionId = religionId;
            return caste;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CasteId
        {
            get
            {
                return _CasteId;
            }
            set
            {
                if (_CasteId != value)
                {
                    OnCasteIdChanging(value);
                    ReportPropertyChanging("CasteId");
                    _CasteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CasteId");
                    OnCasteIdChanged();
                }
            }
        }
        private global::System.Int32 _CasteId;
        partial void OnCasteIdChanging(global::System.Int32 value);
        partial void OnCasteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CasteName
        {
            get
            {
                return _CasteName;
            }
            set
            {
                OnCasteNameChanging(value);
                ReportPropertyChanging("CasteName");
                _CasteName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CasteName");
                OnCasteNameChanged();
            }
        }
        private global::System.String _CasteName;
        partial void OnCasteNameChanging(global::System.String value);
        partial void OnCasteNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReligionId
        {
            get
            {
                return _ReligionId;
            }
            set
            {
                OnReligionIdChanging(value);
                ReportPropertyChanging("ReligionId");
                _ReligionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReligionId");
                OnReligionIdChanged();
            }
        }
        private global::System.Int32 _ReligionId;
        partial void OnReligionIdChanging(global::System.Int32 value);
        partial void OnReligionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Caste_Religion", "Religion")]
        public Religion Religion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("Payroll_Model.FK_Caste_Religion", "Religion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("Payroll_Model.FK_Caste_Religion", "Religion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Religion> ReligionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("Payroll_Model.FK_Caste_Religion", "Religion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Religion>("Payroll_Model.FK_Caste_Religion", "Religion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_Caste", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("Payroll_Model.FK_Employee_Caste", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("Payroll_Model.FK_Employee_Caste", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_Caste1", "Employee")]
        public EntityCollection<Employee> Employees1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("Payroll_Model.FK_Employee_Caste1", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("Payroll_Model.FK_Employee_Caste1", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="companyTypeId">Initial value of the CompanyTypeId property.</param>
        /// <param name="companyCode">Initial value of the CompanyCode property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static Company CreateCompany(global::System.Int32 companyId, global::System.Int32 companyTypeId, global::System.String companyCode, global::System.String companyName)
        {
            Company company = new Company();
            company.CompanyId = companyId;
            company.CompanyTypeId = companyTypeId;
            company.CompanyCode = companyCode;
            company.CompanyName = companyName;
            return company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyTypeId
        {
            get
            {
                return _CompanyTypeId;
            }
            set
            {
                OnCompanyTypeIdChanging(value);
                ReportPropertyChanging("CompanyTypeId");
                _CompanyTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyTypeId");
                OnCompanyTypeIdChanged();
            }
        }
        private global::System.Int32 _CompanyTypeId;
        partial void OnCompanyTypeIdChanging(global::System.Int32 value);
        partial void OnCompanyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyCode
        {
            get
            {
                return _CompanyCode;
            }
            set
            {
                OnCompanyCodeChanging(value);
                ReportPropertyChanging("CompanyCode");
                _CompanyCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyCode");
                OnCompanyCodeChanged();
            }
        }
        private global::System.String _CompanyCode;
        partial void OnCompanyCodeChanging(global::System.String value);
        partial void OnCompanyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactId;
        partial void OnContactIdChanging(Nullable<global::System.Int32> value);
        partial void OnContactIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Department_Company", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("Payroll_Model.FK_Department_Company", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("Payroll_Model.FK_Department_Company", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Organisation_OrganisationType1", "CompanyType")]
        public CompanyType CompanyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyType>("Payroll_Model.FK_Organisation_OrganisationType1", "CompanyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyType>("Payroll_Model.FK_Organisation_OrganisationType1", "CompanyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyType> CompanyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyType>("Payroll_Model.FK_Organisation_OrganisationType1", "CompanyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyType>("Payroll_Model.FK_Organisation_OrganisationType1", "CompanyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_OrganisationBranch_Organisation1", "CompanyBranch")]
        public EntityCollection<CompanyBranch> CompanyBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyBranch>("Payroll_Model.FK_OrganisationBranch_Organisation1", "CompanyBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyBranch>("Payroll_Model.FK_OrganisationBranch_Organisation1", "CompanyBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Organisation_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_Organisation_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_Organisation_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_Organisation_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("Payroll_Model.FK_Organisation_Contact", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="CompanyBranch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyBranch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyBranch object.
        /// </summary>
        /// <param name="companyBranchId">Initial value of the CompanyBranchId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="companyBranchName">Initial value of the CompanyBranchName property.</param>
        public static CompanyBranch CreateCompanyBranch(global::System.Int32 companyBranchId, global::System.Int32 companyId, global::System.String companyBranchName)
        {
            CompanyBranch companyBranch = new CompanyBranch();
            companyBranch.CompanyBranchId = companyBranchId;
            companyBranch.CompanyId = companyId;
            companyBranch.CompanyBranchName = companyBranchName;
            return companyBranch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyBranchId
        {
            get
            {
                return _CompanyBranchId;
            }
            set
            {
                if (_CompanyBranchId != value)
                {
                    OnCompanyBranchIdChanging(value);
                    ReportPropertyChanging("CompanyBranchId");
                    _CompanyBranchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyBranchId");
                    OnCompanyBranchIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyBranchId;
        partial void OnCompanyBranchIdChanging(global::System.Int32 value);
        partial void OnCompanyBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyBranchName
        {
            get
            {
                return _CompanyBranchName;
            }
            set
            {
                OnCompanyBranchNameChanging(value);
                ReportPropertyChanging("CompanyBranchName");
                _CompanyBranchName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyBranchName");
                OnCompanyBranchNameChanged();
            }
        }
        private global::System.String _CompanyBranchName;
        partial void OnCompanyBranchNameChanging(global::System.String value);
        partial void OnCompanyBranchNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactId;
        partial void OnContactIdChanging(Nullable<global::System.Int32> value);
        partial void OnContactIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_OrganisationBranch_Organisation1", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Payroll_Model.FK_OrganisationBranch_Organisation1", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Payroll_Model.FK_OrganisationBranch_Organisation1", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Payroll_Model.FK_OrganisationBranch_Organisation1", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Payroll_Model.FK_OrganisationBranch_Organisation1", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Department_CompanyBranch", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("Payroll_Model.FK_Department_CompanyBranch", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("Payroll_Model.FK_Department_CompanyBranch", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_OrganisationBranch_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_OrganisationBranch_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_OrganisationBranch_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_OrganisationBranch_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("Payroll_Model.FK_OrganisationBranch_Contact", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="CompanyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyType object.
        /// </summary>
        /// <param name="companyTypeId">Initial value of the CompanyTypeId property.</param>
        /// <param name="companyTypeName">Initial value of the CompanyTypeName property.</param>
        public static CompanyType CreateCompanyType(global::System.Int32 companyTypeId, global::System.String companyTypeName)
        {
            CompanyType companyType = new CompanyType();
            companyType.CompanyTypeId = companyTypeId;
            companyType.CompanyTypeName = companyTypeName;
            return companyType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyTypeId
        {
            get
            {
                return _CompanyTypeId;
            }
            set
            {
                if (_CompanyTypeId != value)
                {
                    OnCompanyTypeIdChanging(value);
                    ReportPropertyChanging("CompanyTypeId");
                    _CompanyTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyTypeId");
                    OnCompanyTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyTypeId;
        partial void OnCompanyTypeIdChanging(global::System.Int32 value);
        partial void OnCompanyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyTypeName
        {
            get
            {
                return _CompanyTypeName;
            }
            set
            {
                OnCompanyTypeNameChanging(value);
                ReportPropertyChanging("CompanyTypeName");
                _CompanyTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyTypeName");
                OnCompanyTypeNameChanged();
            }
        }
        private global::System.String _CompanyTypeName;
        partial void OnCompanyTypeNameChanging(global::System.String value);
        partial void OnCompanyTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Organisation_OrganisationType1", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("Payroll_Model.FK_Organisation_OrganisationType1", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("Payroll_Model.FK_Organisation_OrganisationType1", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        /// <param name="address1">Initial value of the Address1 property.</param>
        public static Contact CreateContact(global::System.Int32 contactId, global::System.String address1)
        {
            Contact contact = new Contact();
            contact.ContactId = contactId;
            contact.Address1 = address1;
            return contact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                if (_ContactId != value)
                {
                    OnContactIdChanging(value);
                    ReportPropertyChanging("ContactId");
                    _ContactId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactId");
                    OnContactIdChanged();
                }
            }
        }
        private global::System.Int32 _ContactId;
        partial void OnContactIdChanging(global::System.Int32 value);
        partial void OnContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address3
        {
            get
            {
                return _Address3;
            }
            set
            {
                OnAddress3Changing(value);
                ReportPropertyChanging("Address3");
                _Address3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address3");
                OnAddress3Changed();
            }
        }
        private global::System.String _Address3;
        partial void OnAddress3Changing(global::System.String value);
        partial void OnAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pin
        {
            get
            {
                return _Pin;
            }
            set
            {
                OnPinChanging(value);
                ReportPropertyChanging("Pin");
                _Pin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pin");
                OnPinChanged();
            }
        }
        private global::System.String _Pin;
        partial void OnPinChanging(global::System.String value);
        partial void OnPinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> District
        {
            get
            {
                return _District;
            }
            set
            {
                OnDistrictChanging(value);
                ReportPropertyChanging("District");
                _District = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("District");
                OnDistrictChanged();
            }
        }
        private Nullable<global::System.Int32> _District;
        partial void OnDistrictChanging(Nullable<global::System.Int32> value);
        partial void OnDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private Nullable<global::System.Int32> _State;
        partial void OnStateChanging(Nullable<global::System.Int32> value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private Nullable<global::System.Int32> _Country;
        partial void OnCountryChanging(Nullable<global::System.Int32> value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CAddress1
        {
            get
            {
                return _CAddress1;
            }
            set
            {
                OnCAddress1Changing(value);
                ReportPropertyChanging("CAddress1");
                _CAddress1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CAddress1");
                OnCAddress1Changed();
            }
        }
        private global::System.String _CAddress1;
        partial void OnCAddress1Changing(global::System.String value);
        partial void OnCAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CAddress2
        {
            get
            {
                return _CAddress2;
            }
            set
            {
                OnCAddress2Changing(value);
                ReportPropertyChanging("CAddress2");
                _CAddress2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CAddress2");
                OnCAddress2Changed();
            }
        }
        private global::System.String _CAddress2;
        partial void OnCAddress2Changing(global::System.String value);
        partial void OnCAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CAddress3
        {
            get
            {
                return _CAddress3;
            }
            set
            {
                OnCAddress3Changing(value);
                ReportPropertyChanging("CAddress3");
                _CAddress3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CAddress3");
                OnCAddress3Changed();
            }
        }
        private global::System.String _CAddress3;
        partial void OnCAddress3Changing(global::System.String value);
        partial void OnCAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CPin
        {
            get
            {
                return _CPin;
            }
            set
            {
                OnCPinChanging(value);
                ReportPropertyChanging("CPin");
                _CPin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CPin");
                OnCPinChanged();
            }
        }
        private global::System.String _CPin;
        partial void OnCPinChanging(global::System.String value);
        partial void OnCPinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CDistrict
        {
            get
            {
                return _CDistrict;
            }
            set
            {
                OnCDistrictChanging(value);
                ReportPropertyChanging("CDistrict");
                _CDistrict = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CDistrict");
                OnCDistrictChanged();
            }
        }
        private Nullable<global::System.Int32> _CDistrict;
        partial void OnCDistrictChanging(Nullable<global::System.Int32> value);
        partial void OnCDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CState
        {
            get
            {
                return _CState;
            }
            set
            {
                OnCStateChanging(value);
                ReportPropertyChanging("CState");
                _CState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CState");
                OnCStateChanged();
            }
        }
        private Nullable<global::System.Int32> _CState;
        partial void OnCStateChanging(Nullable<global::System.Int32> value);
        partial void OnCStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CCountry
        {
            get
            {
                return _CCountry;
            }
            set
            {
                OnCCountryChanging(value);
                ReportPropertyChanging("CCountry");
                _CCountry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CCountry");
                OnCCountryChanged();
            }
        }
        private Nullable<global::System.Int32> _CCountry;
        partial void OnCCountryChanging(Nullable<global::System.Int32> value);
        partial void OnCCountryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Organisation_Contact", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("Payroll_Model.FK_Organisation_Contact", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("Payroll_Model.FK_Organisation_Contact", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_OrganisationBranch_Contact", "CompanyBranch")]
        public EntityCollection<CompanyBranch> CompanyBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyBranch>("Payroll_Model.FK_OrganisationBranch_Contact", "CompanyBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyBranch>("Payroll_Model.FK_OrganisationBranch_Contact", "CompanyBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_Contact", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("Payroll_Model.FK_Employee_Contact", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("Payroll_Model.FK_Employee_Contact", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_InstitutionBranch_Contact", "InstitutionBranch")]
        public EntityCollection<InstitutionBranch> InstitutionBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionBranch>("Payroll_Model.FK_InstitutionBranch_Contact", "InstitutionBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionBranch>("Payroll_Model.FK_InstitutionBranch_Contact", "InstitutionBranch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static Country CreateCountry(global::System.Int32 countryId, global::System.String countryName)
        {
            Country country = new Country();
            country.CountryId = countryId;
            country.CountryName = countryName;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_District_Country", "District")]
        public EntityCollection<District> Districts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<District>("Payroll_Model.FK_District_Country", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<District>("Payroll_Model.FK_District_Country", "District", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_State_Country", "State")]
        public EntityCollection<State> States
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<State>("Payroll_Model.FK_State_Country", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<State>("Payroll_Model.FK_State_Country", "State", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="departmentName">Initial value of the DepartmentName property.</param>
        /// <param name="departmentTypeId">Initial value of the DepartmentTypeId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="companyBranchId">Initial value of the CompanyBranchId property.</param>
        public static Department CreateDepartment(global::System.Int32 departmentId, global::System.String departmentName, global::System.Int32 departmentTypeId, global::System.Int32 companyId, global::System.Int32 companyBranchId)
        {
            Department department = new Department();
            department.DepartmentId = departmentId;
            department.DepartmentName = departmentName;
            department.DepartmentTypeId = departmentTypeId;
            department.CompanyId = companyId;
            department.CompanyBranchId = companyBranchId;
            return department;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                if (_DepartmentId != value)
                {
                    OnDepartmentIdChanging(value);
                    ReportPropertyChanging("DepartmentId");
                    _DepartmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartmentId");
                    OnDepartmentIdChanged();
                }
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DepartmentName
        {
            get
            {
                return _DepartmentName;
            }
            set
            {
                OnDepartmentNameChanging(value);
                ReportPropertyChanging("DepartmentName");
                _DepartmentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DepartmentName");
                OnDepartmentNameChanged();
            }
        }
        private global::System.String _DepartmentName;
        partial void OnDepartmentNameChanging(global::System.String value);
        partial void OnDepartmentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNo
        {
            get
            {
                return _PhoneNo;
            }
            set
            {
                OnPhoneNoChanging(value);
                ReportPropertyChanging("PhoneNo");
                _PhoneNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNo");
                OnPhoneNoChanged();
            }
        }
        private global::System.String _PhoneNo;
        partial void OnPhoneNoChanging(global::System.String value);
        partial void OnPhoneNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentTypeId
        {
            get
            {
                return _DepartmentTypeId;
            }
            set
            {
                OnDepartmentTypeIdChanging(value);
                ReportPropertyChanging("DepartmentTypeId");
                _DepartmentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentTypeId");
                OnDepartmentTypeIdChanged();
            }
        }
        private global::System.Int32 _DepartmentTypeId;
        partial void OnDepartmentTypeIdChanging(global::System.Int32 value);
        partial void OnDepartmentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyBranchId
        {
            get
            {
                return _CompanyBranchId;
            }
            set
            {
                OnCompanyBranchIdChanging(value);
                ReportPropertyChanging("CompanyBranchId");
                _CompanyBranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyBranchId");
                OnCompanyBranchIdChanged();
            }
        }
        private global::System.Int32 _CompanyBranchId;
        partial void OnCompanyBranchIdChanging(global::System.Int32 value);
        partial void OnCompanyBranchIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Department_DepartmentType", "DepartmentType")]
        public DepartmentType DepartmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentType>("Payroll_Model.FK_Department_DepartmentType", "DepartmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentType>("Payroll_Model.FK_Department_DepartmentType", "DepartmentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DepartmentType> DepartmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartmentType>("Payroll_Model.FK_Department_DepartmentType", "DepartmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DepartmentType>("Payroll_Model.FK_Department_DepartmentType", "DepartmentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Department_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Payroll_Model.FK_Department_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Payroll_Model.FK_Department_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("Payroll_Model.FK_Department_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("Payroll_Model.FK_Department_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Department_CompanyBranch", "CompanyBranch")]
        public CompanyBranch CompanyBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyBranch>("Payroll_Model.FK_Department_CompanyBranch", "CompanyBranch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyBranch>("Payroll_Model.FK_Department_CompanyBranch", "CompanyBranch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyBranch> CompanyBranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyBranch>("Payroll_Model.FK_Department_CompanyBranch", "CompanyBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyBranch>("Payroll_Model.FK_Department_CompanyBranch", "CompanyBranch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="DepartmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DepartmentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DepartmentType object.
        /// </summary>
        /// <param name="departmentTypeId">Initial value of the DepartmentTypeId property.</param>
        public static DepartmentType CreateDepartmentType(global::System.Int32 departmentTypeId)
        {
            DepartmentType departmentType = new DepartmentType();
            departmentType.DepartmentTypeId = departmentTypeId;
            return departmentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentTypeId
        {
            get
            {
                return _DepartmentTypeId;
            }
            set
            {
                if (_DepartmentTypeId != value)
                {
                    OnDepartmentTypeIdChanging(value);
                    ReportPropertyChanging("DepartmentTypeId");
                    _DepartmentTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartmentTypeId");
                    OnDepartmentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DepartmentTypeId;
        partial void OnDepartmentTypeIdChanging(global::System.Int32 value);
        partial void OnDepartmentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepartmentTypeName
        {
            get
            {
                return _DepartmentTypeName;
            }
            set
            {
                OnDepartmentTypeNameChanging(value);
                ReportPropertyChanging("DepartmentTypeName");
                _DepartmentTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepartmentTypeName");
                OnDepartmentTypeNameChanged();
            }
        }
        private global::System.String _DepartmentTypeName;
        partial void OnDepartmentTypeNameChanging(global::System.String value);
        partial void OnDepartmentTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Department_DepartmentType", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("Payroll_Model.FK_Department_DepartmentType", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("Payroll_Model.FK_Department_DepartmentType", "Department", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Designation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Designation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Designation object.
        /// </summary>
        /// <param name="designationId">Initial value of the DesignationId property.</param>
        /// <param name="designationTypeId">Initial value of the DesignationTypeId property.</param>
        /// <param name="designationCode">Initial value of the DesignationCode property.</param>
        /// <param name="designationName">Initial value of the DesignationName property.</param>
        public static Designation CreateDesignation(global::System.Int32 designationId, global::System.Int32 designationTypeId, global::System.String designationCode, global::System.String designationName)
        {
            Designation designation = new Designation();
            designation.DesignationId = designationId;
            designation.DesignationTypeId = designationTypeId;
            designation.DesignationCode = designationCode;
            designation.DesignationName = designationName;
            return designation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DesignationId
        {
            get
            {
                return _DesignationId;
            }
            set
            {
                if (_DesignationId != value)
                {
                    OnDesignationIdChanging(value);
                    ReportPropertyChanging("DesignationId");
                    _DesignationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DesignationId");
                    OnDesignationIdChanged();
                }
            }
        }
        private global::System.Int32 _DesignationId;
        partial void OnDesignationIdChanging(global::System.Int32 value);
        partial void OnDesignationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DesignationTypeId
        {
            get
            {
                return _DesignationTypeId;
            }
            set
            {
                OnDesignationTypeIdChanging(value);
                ReportPropertyChanging("DesignationTypeId");
                _DesignationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DesignationTypeId");
                OnDesignationTypeIdChanged();
            }
        }
        private global::System.Int32 _DesignationTypeId;
        partial void OnDesignationTypeIdChanging(global::System.Int32 value);
        partial void OnDesignationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DesignationCode
        {
            get
            {
                return _DesignationCode;
            }
            set
            {
                OnDesignationCodeChanging(value);
                ReportPropertyChanging("DesignationCode");
                _DesignationCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DesignationCode");
                OnDesignationCodeChanged();
            }
        }
        private global::System.String _DesignationCode;
        partial void OnDesignationCodeChanging(global::System.String value);
        partial void OnDesignationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DesignationName
        {
            get
            {
                return _DesignationName;
            }
            set
            {
                OnDesignationNameChanging(value);
                ReportPropertyChanging("DesignationName");
                _DesignationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DesignationName");
                OnDesignationNameChanged();
            }
        }
        private global::System.String _DesignationName;
        partial void OnDesignationNameChanging(global::System.String value);
        partial void OnDesignationNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Designation_DesignationType", "DesignationType")]
        public DesignationType DesignationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DesignationType>("Payroll_Model.FK_Designation_DesignationType", "DesignationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DesignationType>("Payroll_Model.FK_Designation_DesignationType", "DesignationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DesignationType> DesignationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DesignationType>("Payroll_Model.FK_Designation_DesignationType", "DesignationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DesignationType>("Payroll_Model.FK_Designation_DesignationType", "DesignationType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="DesignationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DesignationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DesignationType object.
        /// </summary>
        /// <param name="designationTypeId">Initial value of the DesignationTypeId property.</param>
        /// <param name="designationTypeName">Initial value of the DesignationTypeName property.</param>
        public static DesignationType CreateDesignationType(global::System.Int32 designationTypeId, global::System.String designationTypeName)
        {
            DesignationType designationType = new DesignationType();
            designationType.DesignationTypeId = designationTypeId;
            designationType.DesignationTypeName = designationTypeName;
            return designationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DesignationTypeId
        {
            get
            {
                return _DesignationTypeId;
            }
            set
            {
                if (_DesignationTypeId != value)
                {
                    OnDesignationTypeIdChanging(value);
                    ReportPropertyChanging("DesignationTypeId");
                    _DesignationTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DesignationTypeId");
                    OnDesignationTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DesignationTypeId;
        partial void OnDesignationTypeIdChanging(global::System.Int32 value);
        partial void OnDesignationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DesignationTypeName
        {
            get
            {
                return _DesignationTypeName;
            }
            set
            {
                OnDesignationTypeNameChanging(value);
                ReportPropertyChanging("DesignationTypeName");
                _DesignationTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DesignationTypeName");
                OnDesignationTypeNameChanged();
            }
        }
        private global::System.String _DesignationTypeName;
        partial void OnDesignationTypeNameChanging(global::System.String value);
        partial void OnDesignationTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Designation_DesignationType", "Designation")]
        public EntityCollection<Designation> Designations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Designation>("Payroll_Model.FK_Designation_DesignationType", "Designation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Designation>("Payroll_Model.FK_Designation_DesignationType", "Designation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="District")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class District : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new District object.
        /// </summary>
        /// <param name="districtId">Initial value of the DistrictId property.</param>
        /// <param name="districtName">Initial value of the DistrictName property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        public static District CreateDistrict(global::System.Int32 districtId, global::System.String districtName, global::System.Int32 stateId, global::System.Int32 countryId)
        {
            District district = new District();
            district.DistrictId = districtId;
            district.DistrictName = districtName;
            district.StateId = stateId;
            district.CountryId = countryId;
            return district;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DistrictId
        {
            get
            {
                return _DistrictId;
            }
            set
            {
                if (_DistrictId != value)
                {
                    OnDistrictIdChanging(value);
                    ReportPropertyChanging("DistrictId");
                    _DistrictId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DistrictId");
                    OnDistrictIdChanged();
                }
            }
        }
        private global::System.Int32 _DistrictId;
        partial void OnDistrictIdChanging(global::System.Int32 value);
        partial void OnDistrictIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DistrictName
        {
            get
            {
                return _DistrictName;
            }
            set
            {
                OnDistrictNameChanging(value);
                ReportPropertyChanging("DistrictName");
                _DistrictName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DistrictName");
                OnDistrictNameChanged();
            }
        }
        private global::System.String _DistrictName;
        partial void OnDistrictNameChanging(global::System.String value);
        partial void OnDistrictNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_District_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Payroll_Model.FK_District_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Payroll_Model.FK_District_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Payroll_Model.FK_District_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("Payroll_Model.FK_District_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_District_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("Payroll_Model.FK_District_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("Payroll_Model.FK_District_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("Payroll_Model.FK_District_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("Payroll_Model.FK_District_State", "State", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="empId">Initial value of the EmpId property.</param>
        /// <param name="employeeTypeId">Initial value of the EmployeeTypeId property.</param>
        /// <param name="empCode">Initial value of the EmpCode property.</param>
        /// <param name="empName">Initial value of the EmpName property.</param>
        /// <param name="dOB">Initial value of the DOB property.</param>
        /// <param name="dOR">Initial value of the DOR property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="nationality">Initial value of the Nationality property.</param>
        /// <param name="religionId">Initial value of the ReligionId property.</param>
        /// <param name="casteId">Initial value of the CasteId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="exServiceMan">Initial value of the ExServiceMan property.</param>
        /// <param name="physicallyHandicapped">Initial value of the PhysicallyHandicapped property.</param>
        /// <param name="fatherName">Initial value of the FatherName property.</param>
        /// <param name="motherName">Initial value of the MotherName property.</param>
        /// <param name="maritalStatus">Initial value of the MaritalStatus property.</param>
        public static Employee CreateEmployee(global::System.Int64 empId, global::System.Int32 employeeTypeId, global::System.String empCode, global::System.String empName, global::System.DateTime dOB, global::System.DateTime dOR, global::System.String gender, global::System.String nationality, global::System.Int32 religionId, global::System.Int32 casteId, global::System.Int32 categoryId, global::System.String exServiceMan, global::System.String physicallyHandicapped, global::System.String fatherName, global::System.String motherName, global::System.String maritalStatus)
        {
            Employee employee = new Employee();
            employee.EmpId = empId;
            employee.EmployeeTypeId = employeeTypeId;
            employee.EmpCode = empCode;
            employee.EmpName = empName;
            employee.DOB = dOB;
            employee.DOR = dOR;
            employee.Gender = gender;
            employee.Nationality = nationality;
            employee.ReligionId = religionId;
            employee.CasteId = casteId;
            employee.CategoryId = categoryId;
            employee.ExServiceMan = exServiceMan;
            employee.PhysicallyHandicapped = physicallyHandicapped;
            employee.FatherName = fatherName;
            employee.MotherName = motherName;
            employee.MaritalStatus = maritalStatus;
            return employee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpId
        {
            get
            {
                return _EmpId;
            }
            set
            {
                if (_EmpId != value)
                {
                    OnEmpIdChanging(value);
                    ReportPropertyChanging("EmpId");
                    _EmpId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmpId");
                    OnEmpIdChanged();
                }
            }
        }
        private global::System.Int64 _EmpId;
        partial void OnEmpIdChanging(global::System.Int64 value);
        partial void OnEmpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeTypeId
        {
            get
            {
                return _EmployeeTypeId;
            }
            set
            {
                OnEmployeeTypeIdChanging(value);
                ReportPropertyChanging("EmployeeTypeId");
                _EmployeeTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeTypeId");
                OnEmployeeTypeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeTypeId;
        partial void OnEmployeeTypeIdChanging(global::System.Int32 value);
        partial void OnEmployeeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpCode
        {
            get
            {
                return _EmpCode;
            }
            set
            {
                OnEmpCodeChanging(value);
                ReportPropertyChanging("EmpCode");
                _EmpCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmpCode");
                OnEmpCodeChanged();
            }
        }
        private global::System.String _EmpCode;
        partial void OnEmpCodeChanging(global::System.String value);
        partial void OnEmpCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                OnEmpNameChanging(value);
                ReportPropertyChanging("EmpName");
                _EmpName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmpName");
                OnEmpNameChanged();
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private global::System.DateTime _DOB;
        partial void OnDOBChanging(global::System.DateTime value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DOR
        {
            get
            {
                return _DOR;
            }
            set
            {
                OnDORChanging(value);
                ReportPropertyChanging("DOR");
                _DOR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOR");
                OnDORChanged();
            }
        }
        private global::System.DateTime _DOR;
        partial void OnDORChanging(global::System.DateTime value);
        partial void OnDORChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReligionId
        {
            get
            {
                return _ReligionId;
            }
            set
            {
                OnReligionIdChanging(value);
                ReportPropertyChanging("ReligionId");
                _ReligionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReligionId");
                OnReligionIdChanged();
            }
        }
        private global::System.Int32 _ReligionId;
        partial void OnReligionIdChanging(global::System.Int32 value);
        partial void OnReligionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CasteId
        {
            get
            {
                return _CasteId;
            }
            set
            {
                OnCasteIdChanging(value);
                ReportPropertyChanging("CasteId");
                _CasteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CasteId");
                OnCasteIdChanged();
            }
        }
        private global::System.Int32 _CasteId;
        partial void OnCasteIdChanging(global::System.Int32 value);
        partial void OnCasteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PanNo
        {
            get
            {
                return _PanNo;
            }
            set
            {
                OnPanNoChanging(value);
                ReportPropertyChanging("PanNo");
                _PanNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PanNo");
                OnPanNoChanged();
            }
        }
        private Nullable<global::System.Int64> _PanNo;
        partial void OnPanNoChanging(Nullable<global::System.Int64> value);
        partial void OnPanNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BloodGroup
        {
            get
            {
                return _BloodGroup;
            }
            set
            {
                OnBloodGroupChanging(value);
                ReportPropertyChanging("BloodGroup");
                _BloodGroup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BloodGroup");
                OnBloodGroupChanged();
            }
        }
        private global::System.String _BloodGroup;
        partial void OnBloodGroupChanging(global::System.String value);
        partial void OnBloodGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExServiceMan
        {
            get
            {
                return _ExServiceMan;
            }
            set
            {
                OnExServiceManChanging(value);
                ReportPropertyChanging("ExServiceMan");
                _ExServiceMan = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExServiceMan");
                OnExServiceManChanged();
            }
        }
        private global::System.String _ExServiceMan;
        partial void OnExServiceManChanging(global::System.String value);
        partial void OnExServiceManChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhysicallyHandicapped
        {
            get
            {
                return _PhysicallyHandicapped;
            }
            set
            {
                OnPhysicallyHandicappedChanging(value);
                ReportPropertyChanging("PhysicallyHandicapped");
                _PhysicallyHandicapped = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhysicallyHandicapped");
                OnPhysicallyHandicappedChanged();
            }
        }
        private global::System.String _PhysicallyHandicapped;
        partial void OnPhysicallyHandicappedChanging(global::System.String value);
        partial void OnPhysicallyHandicappedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NatureOfHandicap
        {
            get
            {
                return _NatureOfHandicap;
            }
            set
            {
                OnNatureOfHandicapChanging(value);
                ReportPropertyChanging("NatureOfHandicap");
                _NatureOfHandicap = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NatureOfHandicap");
                OnNatureOfHandicapChanged();
            }
        }
        private global::System.String _NatureOfHandicap;
        partial void OnNatureOfHandicapChanging(global::System.String value);
        partial void OnNatureOfHandicapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherName
        {
            get
            {
                return _FatherName;
            }
            set
            {
                OnFatherNameChanging(value);
                ReportPropertyChanging("FatherName");
                _FatherName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherName");
                OnFatherNameChanged();
            }
        }
        private global::System.String _FatherName;
        partial void OnFatherNameChanging(global::System.String value);
        partial void OnFatherNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MotherName
        {
            get
            {
                return _MotherName;
            }
            set
            {
                OnMotherNameChanging(value);
                ReportPropertyChanging("MotherName");
                _MotherName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MotherName");
                OnMotherNameChanged();
            }
        }
        private global::System.String _MotherName;
        partial void OnMotherNameChanging(global::System.String value);
        partial void OnMotherNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MaritalStatus
        {
            get
            {
                return _MaritalStatus;
            }
            set
            {
                OnMaritalStatusChanging(value);
                ReportPropertyChanging("MaritalStatus");
                _MaritalStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MaritalStatus");
                OnMaritalStatusChanged();
            }
        }
        private global::System.String _MaritalStatus;
        partial void OnMaritalStatusChanging(global::System.String value);
        partial void OnMaritalStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpouseName
        {
            get
            {
                return _SpouseName;
            }
            set
            {
                OnSpouseNameChanging(value);
                ReportPropertyChanging("SpouseName");
                _SpouseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpouseName");
                OnSpouseNameChanged();
            }
        }
        private global::System.String _SpouseName;
        partial void OnSpouseNameChanging(global::System.String value);
        partial void OnSpouseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SpouseReligionId
        {
            get
            {
                return _SpouseReligionId;
            }
            set
            {
                OnSpouseReligionIdChanging(value);
                ReportPropertyChanging("SpouseReligionId");
                _SpouseReligionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpouseReligionId");
                OnSpouseReligionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SpouseReligionId;
        partial void OnSpouseReligionIdChanging(Nullable<global::System.Int32> value);
        partial void OnSpouseReligionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SpouseCasteId
        {
            get
            {
                return _SpouseCasteId;
            }
            set
            {
                OnSpouseCasteIdChanging(value);
                ReportPropertyChanging("SpouseCasteId");
                _SpouseCasteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpouseCasteId");
                OnSpouseCasteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SpouseCasteId;
        partial void OnSpouseCasteIdChanging(Nullable<global::System.Int32> value);
        partial void OnSpouseCasteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpouseEmployed
        {
            get
            {
                return _SpouseEmployed;
            }
            set
            {
                OnSpouseEmployedChanging(value);
                ReportPropertyChanging("SpouseEmployed");
                _SpouseEmployed = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpouseEmployed");
                OnSpouseEmployedChanged();
            }
        }
        private global::System.String _SpouseEmployed;
        partial void OnSpouseEmployedChanging(global::System.String value);
        partial void OnSpouseEmployedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpouseEmployment
        {
            get
            {
                return _SpouseEmployment;
            }
            set
            {
                OnSpouseEmploymentChanging(value);
                ReportPropertyChanging("SpouseEmployment");
                _SpouseEmployment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpouseEmployment");
                OnSpouseEmploymentChanged();
            }
        }
        private global::System.String _SpouseEmployment;
        partial void OnSpouseEmploymentChanging(global::System.String value);
        partial void OnSpouseEmploymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactId;
        partial void OnContactIdChanging(Nullable<global::System.Int32> value);
        partial void OnContactIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_Caste", "Caste")]
        public Caste Caste
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("Payroll_Model.FK_Employee_Caste", "Caste").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("Payroll_Model.FK_Employee_Caste", "Caste").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Caste> CasteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("Payroll_Model.FK_Employee_Caste", "Caste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Caste>("Payroll_Model.FK_Employee_Caste", "Caste", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_Caste1", "Caste")]
        public Caste Caste1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("Payroll_Model.FK_Employee_Caste1", "Caste").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("Payroll_Model.FK_Employee_Caste1", "Caste").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Caste> Caste1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Caste>("Payroll_Model.FK_Employee_Caste1", "Caste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Caste>("Payroll_Model.FK_Employee_Caste1", "Caste", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_EmployeeType", "EmployeeType")]
        public EmployeeType EmployeeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("Payroll_Model.FK_Employee_EmployeeType", "EmployeeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("Payroll_Model.FK_Employee_EmployeeType", "EmployeeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeType> EmployeeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("Payroll_Model.FK_Employee_EmployeeType", "EmployeeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeType>("Payroll_Model.FK_Employee_EmployeeType", "EmployeeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_Religion", "Religion")]
        public Religion Religion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("Payroll_Model.FK_Employee_Religion", "Religion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("Payroll_Model.FK_Employee_Religion", "Religion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Religion> ReligionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("Payroll_Model.FK_Employee_Religion", "Religion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Religion>("Payroll_Model.FK_Employee_Religion", "Religion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_Religion1", "Religion")]
        public Religion Religion1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("Payroll_Model.FK_Employee_Religion1", "Religion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("Payroll_Model.FK_Employee_Religion1", "Religion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Religion> Religion1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("Payroll_Model.FK_Employee_Religion1", "Religion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Religion>("Payroll_Model.FK_Employee_Religion1", "Religion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_EmpNominee_Employee", "EmpNominee")]
        public EntityCollection<EmpNominee> EmpNominees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpNominee>("Payroll_Model.FK_EmpNominee_Employee", "EmpNominee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpNominee>("Payroll_Model.FK_EmpNominee_Employee", "EmpNominee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_Employee_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_Employee_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_Employee_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("Payroll_Model.FK_Employee_Contact", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="EmployeeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeType object.
        /// </summary>
        /// <param name="employeeTypeId">Initial value of the EmployeeTypeId property.</param>
        /// <param name="employeeTypeName">Initial value of the EmployeeTypeName property.</param>
        public static EmployeeType CreateEmployeeType(global::System.Int32 employeeTypeId, global::System.String employeeTypeName)
        {
            EmployeeType employeeType = new EmployeeType();
            employeeType.EmployeeTypeId = employeeTypeId;
            employeeType.EmployeeTypeName = employeeTypeName;
            return employeeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeTypeId
        {
            get
            {
                return _EmployeeTypeId;
            }
            set
            {
                if (_EmployeeTypeId != value)
                {
                    OnEmployeeTypeIdChanging(value);
                    ReportPropertyChanging("EmployeeTypeId");
                    _EmployeeTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeTypeId");
                    OnEmployeeTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeTypeId;
        partial void OnEmployeeTypeIdChanging(global::System.Int32 value);
        partial void OnEmployeeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeTypeName
        {
            get
            {
                return _EmployeeTypeName;
            }
            set
            {
                OnEmployeeTypeNameChanging(value);
                ReportPropertyChanging("EmployeeTypeName");
                _EmployeeTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmployeeTypeName");
                OnEmployeeTypeNameChanged();
            }
        }
        private global::System.String _EmployeeTypeName;
        partial void OnEmployeeTypeNameChanging(global::System.String value);
        partial void OnEmployeeTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_EmployeeType", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("Payroll_Model.FK_Employee_EmployeeType", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("Payroll_Model.FK_Employee_EmployeeType", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="EmpNominee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpNominee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpNominee object.
        /// </summary>
        /// <param name="empNomineeId">Initial value of the EmpNomineeId property.</param>
        /// <param name="empId">Initial value of the EmpId property.</param>
        /// <param name="nomineeName">Initial value of the NomineeName property.</param>
        /// <param name="dOB">Initial value of the DOB property.</param>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        public static EmpNominee CreateEmpNominee(global::System.Int32 empNomineeId, global::System.Int64 empId, global::System.String nomineeName, global::System.DateTime dOB, global::System.Int32 contactId)
        {
            EmpNominee empNominee = new EmpNominee();
            empNominee.EmpNomineeId = empNomineeId;
            empNominee.EmpId = empId;
            empNominee.NomineeName = nomineeName;
            empNominee.DOB = dOB;
            empNominee.ContactId = contactId;
            return empNominee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpNomineeId
        {
            get
            {
                return _EmpNomineeId;
            }
            set
            {
                if (_EmpNomineeId != value)
                {
                    OnEmpNomineeIdChanging(value);
                    ReportPropertyChanging("EmpNomineeId");
                    _EmpNomineeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmpNomineeId");
                    OnEmpNomineeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmpNomineeId;
        partial void OnEmpNomineeIdChanging(global::System.Int32 value);
        partial void OnEmpNomineeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpId
        {
            get
            {
                return _EmpId;
            }
            set
            {
                OnEmpIdChanging(value);
                ReportPropertyChanging("EmpId");
                _EmpId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpId");
                OnEmpIdChanged();
            }
        }
        private global::System.Int64 _EmpId;
        partial void OnEmpIdChanging(global::System.Int64 value);
        partial void OnEmpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NomineeName
        {
            get
            {
                return _NomineeName;
            }
            set
            {
                OnNomineeNameChanging(value);
                ReportPropertyChanging("NomineeName");
                _NomineeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NomineeName");
                OnNomineeNameChanged();
            }
        }
        private global::System.String _NomineeName;
        partial void OnNomineeNameChanging(global::System.String value);
        partial void OnNomineeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private global::System.DateTime _DOB;
        partial void OnDOBChanging(global::System.DateTime value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private global::System.Int32 _ContactId;
        partial void OnContactIdChanging(global::System.Int32 value);
        partial void OnContactIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_EmpNominee_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Payroll_Model.FK_EmpNominee_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Payroll_Model.FK_EmpNominee_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Payroll_Model.FK_EmpNominee_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("Payroll_Model.FK_EmpNominee_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Grade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Grade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Grade object.
        /// </summary>
        /// <param name="gradeId">Initial value of the GradeId property.</param>
        /// <param name="gradeCode">Initial value of the GradeCode property.</param>
        /// <param name="gradeName">Initial value of the GradeName property.</param>
        /// <param name="gradePay">Initial value of the GradePay property.</param>
        public static Grade CreateGrade(global::System.Int32 gradeId, global::System.String gradeCode, global::System.String gradeName, global::System.Decimal gradePay)
        {
            Grade grade = new Grade();
            grade.GradeId = gradeId;
            grade.GradeCode = gradeCode;
            grade.GradeName = gradeName;
            grade.GradePay = gradePay;
            return grade;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GradeId
        {
            get
            {
                return _GradeId;
            }
            set
            {
                if (_GradeId != value)
                {
                    OnGradeIdChanging(value);
                    ReportPropertyChanging("GradeId");
                    _GradeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GradeId");
                    OnGradeIdChanged();
                }
            }
        }
        private global::System.Int32 _GradeId;
        partial void OnGradeIdChanging(global::System.Int32 value);
        partial void OnGradeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GradeCode
        {
            get
            {
                return _GradeCode;
            }
            set
            {
                OnGradeCodeChanging(value);
                ReportPropertyChanging("GradeCode");
                _GradeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GradeCode");
                OnGradeCodeChanged();
            }
        }
        private global::System.String _GradeCode;
        partial void OnGradeCodeChanging(global::System.String value);
        partial void OnGradeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GradeName
        {
            get
            {
                return _GradeName;
            }
            set
            {
                OnGradeNameChanging(value);
                ReportPropertyChanging("GradeName");
                _GradeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GradeName");
                OnGradeNameChanged();
            }
        }
        private global::System.String _GradeName;
        partial void OnGradeNameChanging(global::System.String value);
        partial void OnGradeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GradePay
        {
            get
            {
                return _GradePay;
            }
            set
            {
                OnGradePayChanging(value);
                ReportPropertyChanging("GradePay");
                _GradePay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GradePay");
                OnGradePayChanged();
            }
        }
        private global::System.Decimal _GradePay;
        partial void OnGradePayChanging(global::System.Decimal value);
        partial void OnGradePayChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Institution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Institution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Institution object.
        /// </summary>
        /// <param name="institutionId">Initial value of the InstitutionId property.</param>
        /// <param name="institutionCode">Initial value of the InstitutionCode property.</param>
        /// <param name="institutionName">Initial value of the InstitutionName property.</param>
        /// <param name="institutionTypeId">Initial value of the InstitutionTypeId property.</param>
        public static Institution CreateInstitution(global::System.Int32 institutionId, global::System.String institutionCode, global::System.String institutionName, global::System.Int32 institutionTypeId)
        {
            Institution institution = new Institution();
            institution.InstitutionId = institutionId;
            institution.InstitutionCode = institutionCode;
            institution.InstitutionName = institutionName;
            institution.InstitutionTypeId = institutionTypeId;
            return institution;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionId
        {
            get
            {
                return _InstitutionId;
            }
            set
            {
                if (_InstitutionId != value)
                {
                    OnInstitutionIdChanging(value);
                    ReportPropertyChanging("InstitutionId");
                    _InstitutionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionId");
                    OnInstitutionIdChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionId;
        partial void OnInstitutionIdChanging(global::System.Int32 value);
        partial void OnInstitutionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstitutionCode
        {
            get
            {
                return _InstitutionCode;
            }
            set
            {
                OnInstitutionCodeChanging(value);
                ReportPropertyChanging("InstitutionCode");
                _InstitutionCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstitutionCode");
                OnInstitutionCodeChanged();
            }
        }
        private global::System.String _InstitutionCode;
        partial void OnInstitutionCodeChanging(global::System.String value);
        partial void OnInstitutionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstitutionName
        {
            get
            {
                return _InstitutionName;
            }
            set
            {
                OnInstitutionNameChanging(value);
                ReportPropertyChanging("InstitutionName");
                _InstitutionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstitutionName");
                OnInstitutionNameChanged();
            }
        }
        private global::System.String _InstitutionName;
        partial void OnInstitutionNameChanging(global::System.String value);
        partial void OnInstitutionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionTypeId
        {
            get
            {
                return _InstitutionTypeId;
            }
            set
            {
                OnInstitutionTypeIdChanging(value);
                ReportPropertyChanging("InstitutionTypeId");
                _InstitutionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionTypeId");
                OnInstitutionTypeIdChanged();
            }
        }
        private global::System.Int32 _InstitutionTypeId;
        partial void OnInstitutionTypeIdChanging(global::System.Int32 value);
        partial void OnInstitutionTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Institution_InstitutionType", "InstitutionType")]
        public InstitutionType InstitutionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionType>("Payroll_Model.FK_Institution_InstitutionType", "InstitutionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionType>("Payroll_Model.FK_Institution_InstitutionType", "InstitutionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstitutionType> InstitutionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionType>("Payroll_Model.FK_Institution_InstitutionType", "InstitutionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstitutionType>("Payroll_Model.FK_Institution_InstitutionType", "InstitutionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_InstitutionBranch_Institution", "InstitutionBranch")]
        public EntityCollection<InstitutionBranch> InstitutionBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionBranch>("Payroll_Model.FK_InstitutionBranch_Institution", "InstitutionBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionBranch>("Payroll_Model.FK_InstitutionBranch_Institution", "InstitutionBranch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="InstitutionBranch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstitutionBranch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstitutionBranch object.
        /// </summary>
        /// <param name="institutionBranchId">Initial value of the InstitutionBranchId property.</param>
        /// <param name="institutionId">Initial value of the InstitutionId property.</param>
        /// <param name="institutionBranchCode">Initial value of the InstitutionBranchCode property.</param>
        /// <param name="institutionBranchName">Initial value of the InstitutionBranchName property.</param>
        public static InstitutionBranch CreateInstitutionBranch(global::System.Int32 institutionBranchId, global::System.Int32 institutionId, global::System.String institutionBranchCode, global::System.String institutionBranchName)
        {
            InstitutionBranch institutionBranch = new InstitutionBranch();
            institutionBranch.InstitutionBranchId = institutionBranchId;
            institutionBranch.InstitutionId = institutionId;
            institutionBranch.InstitutionBranchCode = institutionBranchCode;
            institutionBranch.InstitutionBranchName = institutionBranchName;
            return institutionBranch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionBranchId
        {
            get
            {
                return _InstitutionBranchId;
            }
            set
            {
                if (_InstitutionBranchId != value)
                {
                    OnInstitutionBranchIdChanging(value);
                    ReportPropertyChanging("InstitutionBranchId");
                    _InstitutionBranchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionBranchId");
                    OnInstitutionBranchIdChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionBranchId;
        partial void OnInstitutionBranchIdChanging(global::System.Int32 value);
        partial void OnInstitutionBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionId
        {
            get
            {
                return _InstitutionId;
            }
            set
            {
                OnInstitutionIdChanging(value);
                ReportPropertyChanging("InstitutionId");
                _InstitutionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionId");
                OnInstitutionIdChanged();
            }
        }
        private global::System.Int32 _InstitutionId;
        partial void OnInstitutionIdChanging(global::System.Int32 value);
        partial void OnInstitutionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstitutionBranchCode
        {
            get
            {
                return _InstitutionBranchCode;
            }
            set
            {
                OnInstitutionBranchCodeChanging(value);
                ReportPropertyChanging("InstitutionBranchCode");
                _InstitutionBranchCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstitutionBranchCode");
                OnInstitutionBranchCodeChanged();
            }
        }
        private global::System.String _InstitutionBranchCode;
        partial void OnInstitutionBranchCodeChanging(global::System.String value);
        partial void OnInstitutionBranchCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstitutionBranchName
        {
            get
            {
                return _InstitutionBranchName;
            }
            set
            {
                OnInstitutionBranchNameChanging(value);
                ReportPropertyChanging("InstitutionBranchName");
                _InstitutionBranchName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstitutionBranchName");
                OnInstitutionBranchNameChanged();
            }
        }
        private global::System.String _InstitutionBranchName;
        partial void OnInstitutionBranchNameChanging(global::System.String value);
        partial void OnInstitutionBranchNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactId;
        partial void OnContactIdChanging(Nullable<global::System.Int32> value);
        partial void OnContactIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_InstitutionBranch_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Payroll_Model.FK_InstitutionBranch_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Payroll_Model.FK_InstitutionBranch_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Payroll_Model.FK_InstitutionBranch_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Payroll_Model.FK_InstitutionBranch_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_InstitutionBranch_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_InstitutionBranch_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_InstitutionBranch_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("Payroll_Model.FK_InstitutionBranch_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("Payroll_Model.FK_InstitutionBranch_Contact", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="InstitutionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstitutionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstitutionType object.
        /// </summary>
        /// <param name="institutionTypeId">Initial value of the InstitutionTypeId property.</param>
        /// <param name="institutionTypeName">Initial value of the InstitutionTypeName property.</param>
        public static InstitutionType CreateInstitutionType(global::System.Int32 institutionTypeId, global::System.String institutionTypeName)
        {
            InstitutionType institutionType = new InstitutionType();
            institutionType.InstitutionTypeId = institutionTypeId;
            institutionType.InstitutionTypeName = institutionTypeName;
            return institutionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionTypeId
        {
            get
            {
                return _InstitutionTypeId;
            }
            set
            {
                if (_InstitutionTypeId != value)
                {
                    OnInstitutionTypeIdChanging(value);
                    ReportPropertyChanging("InstitutionTypeId");
                    _InstitutionTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionTypeId");
                    OnInstitutionTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionTypeId;
        partial void OnInstitutionTypeIdChanging(global::System.Int32 value);
        partial void OnInstitutionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstitutionTypeName
        {
            get
            {
                return _InstitutionTypeName;
            }
            set
            {
                OnInstitutionTypeNameChanging(value);
                ReportPropertyChanging("InstitutionTypeName");
                _InstitutionTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstitutionTypeName");
                OnInstitutionTypeNameChanged();
            }
        }
        private global::System.String _InstitutionTypeName;
        partial void OnInstitutionTypeNameChanging(global::System.String value);
        partial void OnInstitutionTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Institution_InstitutionType", "Institution")]
        public EntityCollection<Institution> Institutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Institution>("Payroll_Model.FK_Institution_InstitutionType", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Institution>("Payroll_Model.FK_Institution_InstitutionType", "Institution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="PayGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayGroup object.
        /// </summary>
        /// <param name="payGroupId">Initial value of the PayGroupId property.</param>
        /// <param name="payRevisionId">Initial value of the PayRevisionId property.</param>
        /// <param name="payGroupNo">Initial value of the PayGroupNo property.</param>
        /// <param name="payGroupName">Initial value of the PayGroupName property.</param>
        /// <param name="noOfScales">Initial value of the NoOfScales property.</param>
        public static PayGroup CreatePayGroup(global::System.Int32 payGroupId, global::System.Int32 payRevisionId, global::System.String payGroupNo, global::System.String payGroupName, global::System.String noOfScales)
        {
            PayGroup payGroup = new PayGroup();
            payGroup.PayGroupId = payGroupId;
            payGroup.PayRevisionId = payRevisionId;
            payGroup.PayGroupNo = payGroupNo;
            payGroup.PayGroupName = payGroupName;
            payGroup.NoOfScales = noOfScales;
            return payGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayGroupId
        {
            get
            {
                return _PayGroupId;
            }
            set
            {
                if (_PayGroupId != value)
                {
                    OnPayGroupIdChanging(value);
                    ReportPropertyChanging("PayGroupId");
                    _PayGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayGroupId");
                    OnPayGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _PayGroupId;
        partial void OnPayGroupIdChanging(global::System.Int32 value);
        partial void OnPayGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayRevisionId
        {
            get
            {
                return _PayRevisionId;
            }
            set
            {
                OnPayRevisionIdChanging(value);
                ReportPropertyChanging("PayRevisionId");
                _PayRevisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayRevisionId");
                OnPayRevisionIdChanged();
            }
        }
        private global::System.Int32 _PayRevisionId;
        partial void OnPayRevisionIdChanging(global::System.Int32 value);
        partial void OnPayRevisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PayGroupNo
        {
            get
            {
                return _PayGroupNo;
            }
            set
            {
                OnPayGroupNoChanging(value);
                ReportPropertyChanging("PayGroupNo");
                _PayGroupNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PayGroupNo");
                OnPayGroupNoChanged();
            }
        }
        private global::System.String _PayGroupNo;
        partial void OnPayGroupNoChanging(global::System.String value);
        partial void OnPayGroupNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PayGroupName
        {
            get
            {
                return _PayGroupName;
            }
            set
            {
                OnPayGroupNameChanging(value);
                ReportPropertyChanging("PayGroupName");
                _PayGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PayGroupName");
                OnPayGroupNameChanged();
            }
        }
        private global::System.String _PayGroupName;
        partial void OnPayGroupNameChanging(global::System.String value);
        partial void OnPayGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoOfScales
        {
            get
            {
                return _NoOfScales;
            }
            set
            {
                OnNoOfScalesChanging(value);
                ReportPropertyChanging("NoOfScales");
                _NoOfScales = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NoOfScales");
                OnNoOfScalesChanged();
            }
        }
        private global::System.String _NoOfScales;
        partial void OnNoOfScalesChanging(global::System.String value);
        partial void OnNoOfScalesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayGroup_PayRevision", "PayRevision")]
        public PayRevision PayRevision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayRevision>("Payroll_Model.FK_PayGroup_PayRevision", "PayRevision").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayRevision>("Payroll_Model.FK_PayGroup_PayRevision", "PayRevision").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayRevision> PayRevisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayRevision>("Payroll_Model.FK_PayGroup_PayRevision", "PayRevision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayRevision>("Payroll_Model.FK_PayGroup_PayRevision", "PayRevision", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayScale_PayGroup", "PayScale")]
        public EntityCollection<PayScale> PayScales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayScale>("Payroll_Model.FK_PayScale_PayGroup", "PayScale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayScale>("Payroll_Model.FK_PayScale_PayGroup", "PayScale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayStage_PayGroup", "PayStage")]
        public EntityCollection<PayStage> PayStages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayStage>("Payroll_Model.FK_PayStage_PayGroup", "PayStage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayStage>("Payroll_Model.FK_PayStage_PayGroup", "PayStage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="PayRevision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayRevision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayRevision object.
        /// </summary>
        /// <param name="payRevisionId">Initial value of the PayRevisionId property.</param>
        /// <param name="payRevisionName">Initial value of the PayRevisionName property.</param>
        /// <param name="revisionYear">Initial value of the RevisionYear property.</param>
        public static PayRevision CreatePayRevision(global::System.Int32 payRevisionId, global::System.String payRevisionName, global::System.String revisionYear)
        {
            PayRevision payRevision = new PayRevision();
            payRevision.PayRevisionId = payRevisionId;
            payRevision.PayRevisionName = payRevisionName;
            payRevision.RevisionYear = revisionYear;
            return payRevision;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayRevisionId
        {
            get
            {
                return _PayRevisionId;
            }
            set
            {
                if (_PayRevisionId != value)
                {
                    OnPayRevisionIdChanging(value);
                    ReportPropertyChanging("PayRevisionId");
                    _PayRevisionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayRevisionId");
                    OnPayRevisionIdChanged();
                }
            }
        }
        private global::System.Int32 _PayRevisionId;
        partial void OnPayRevisionIdChanging(global::System.Int32 value);
        partial void OnPayRevisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PayRevisionName
        {
            get
            {
                return _PayRevisionName;
            }
            set
            {
                OnPayRevisionNameChanging(value);
                ReportPropertyChanging("PayRevisionName");
                _PayRevisionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PayRevisionName");
                OnPayRevisionNameChanged();
            }
        }
        private global::System.String _PayRevisionName;
        partial void OnPayRevisionNameChanging(global::System.String value);
        partial void OnPayRevisionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RevisionYear
        {
            get
            {
                return _RevisionYear;
            }
            set
            {
                OnRevisionYearChanging(value);
                ReportPropertyChanging("RevisionYear");
                _RevisionYear = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RevisionYear");
                OnRevisionYearChanged();
            }
        }
        private global::System.String _RevisionYear;
        partial void OnRevisionYearChanging(global::System.String value);
        partial void OnRevisionYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RevisionDate
        {
            get
            {
                return _RevisionDate;
            }
            set
            {
                OnRevisionDateChanging(value);
                ReportPropertyChanging("RevisionDate");
                _RevisionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RevisionDate");
                OnRevisionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RevisionDate;
        partial void OnRevisionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRevisionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SanctionDate
        {
            get
            {
                return _SanctionDate;
            }
            set
            {
                OnSanctionDateChanging(value);
                ReportPropertyChanging("SanctionDate");
                _SanctionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SanctionDate");
                OnSanctionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SanctionDate;
        partial void OnSanctionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSanctionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AplicableFrom
        {
            get
            {
                return _AplicableFrom;
            }
            set
            {
                OnAplicableFromChanging(value);
                ReportPropertyChanging("AplicableFrom");
                _AplicableFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AplicableFrom");
                OnAplicableFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _AplicableFrom;
        partial void OnAplicableFromChanging(Nullable<global::System.DateTime> value);
        partial void OnAplicableFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CancelledDate
        {
            get
            {
                return _CancelledDate;
            }
            set
            {
                OnCancelledDateChanging(value);
                ReportPropertyChanging("CancelledDate");
                _CancelledDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CancelledDate");
                OnCancelledDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CancelledDate;
        partial void OnCancelledDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCancelledDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayGroup_PayRevision", "PayGroup")]
        public EntityCollection<PayGroup> PayGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayGroup>("Payroll_Model.FK_PayGroup_PayRevision", "PayGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayGroup>("Payroll_Model.FK_PayGroup_PayRevision", "PayGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayScale_PayRevision", "PayScale")]
        public EntityCollection<PayScale> PayScales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayScale>("Payroll_Model.FK_PayScale_PayRevision", "PayScale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayScale>("Payroll_Model.FK_PayScale_PayRevision", "PayScale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayStage_PayRevision", "PayStage")]
        public EntityCollection<PayStage> PayStages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayStage>("Payroll_Model.FK_PayStage_PayRevision", "PayStage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayStage>("Payroll_Model.FK_PayStage_PayRevision", "PayStage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="PayScale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayScale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayScale object.
        /// </summary>
        /// <param name="payScaleId">Initial value of the PayScaleId property.</param>
        /// <param name="payRevisionId">Initial value of the PayRevisionId property.</param>
        /// <param name="payGroupId">Initial value of the PayGroupId property.</param>
        /// <param name="payScaleName">Initial value of the PayScaleName property.</param>
        /// <param name="payScaleDefinition">Initial value of the PayScaleDefinition property.</param>
        /// <param name="payScaleMin">Initial value of the PayScaleMin property.</param>
        /// <param name="payScaleMax">Initial value of the PayScaleMax property.</param>
        /// <param name="incrementPeriod">Initial value of the IncrementPeriod property.</param>
        public static PayScale CreatePayScale(global::System.Int32 payScaleId, global::System.Int32 payRevisionId, global::System.Int32 payGroupId, global::System.String payScaleName, global::System.String payScaleDefinition, global::System.Decimal payScaleMin, global::System.Decimal payScaleMax, global::System.Int32 incrementPeriod)
        {
            PayScale payScale = new PayScale();
            payScale.PayScaleId = payScaleId;
            payScale.PayRevisionId = payRevisionId;
            payScale.PayGroupId = payGroupId;
            payScale.PayScaleName = payScaleName;
            payScale.PayScaleDefinition = payScaleDefinition;
            payScale.PayScaleMin = payScaleMin;
            payScale.PayScaleMax = payScaleMax;
            payScale.IncrementPeriod = incrementPeriod;
            return payScale;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayScaleId
        {
            get
            {
                return _PayScaleId;
            }
            set
            {
                if (_PayScaleId != value)
                {
                    OnPayScaleIdChanging(value);
                    ReportPropertyChanging("PayScaleId");
                    _PayScaleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayScaleId");
                    OnPayScaleIdChanged();
                }
            }
        }
        private global::System.Int32 _PayScaleId;
        partial void OnPayScaleIdChanging(global::System.Int32 value);
        partial void OnPayScaleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayRevisionId
        {
            get
            {
                return _PayRevisionId;
            }
            set
            {
                OnPayRevisionIdChanging(value);
                ReportPropertyChanging("PayRevisionId");
                _PayRevisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayRevisionId");
                OnPayRevisionIdChanged();
            }
        }
        private global::System.Int32 _PayRevisionId;
        partial void OnPayRevisionIdChanging(global::System.Int32 value);
        partial void OnPayRevisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayGroupId
        {
            get
            {
                return _PayGroupId;
            }
            set
            {
                OnPayGroupIdChanging(value);
                ReportPropertyChanging("PayGroupId");
                _PayGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayGroupId");
                OnPayGroupIdChanged();
            }
        }
        private global::System.Int32 _PayGroupId;
        partial void OnPayGroupIdChanging(global::System.Int32 value);
        partial void OnPayGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PayScaleName
        {
            get
            {
                return _PayScaleName;
            }
            set
            {
                OnPayScaleNameChanging(value);
                ReportPropertyChanging("PayScaleName");
                _PayScaleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PayScaleName");
                OnPayScaleNameChanged();
            }
        }
        private global::System.String _PayScaleName;
        partial void OnPayScaleNameChanging(global::System.String value);
        partial void OnPayScaleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PayScaleDefinition
        {
            get
            {
                return _PayScaleDefinition;
            }
            set
            {
                OnPayScaleDefinitionChanging(value);
                ReportPropertyChanging("PayScaleDefinition");
                _PayScaleDefinition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PayScaleDefinition");
                OnPayScaleDefinitionChanged();
            }
        }
        private global::System.String _PayScaleDefinition;
        partial void OnPayScaleDefinitionChanging(global::System.String value);
        partial void OnPayScaleDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PayScaleMin
        {
            get
            {
                return _PayScaleMin;
            }
            set
            {
                OnPayScaleMinChanging(value);
                ReportPropertyChanging("PayScaleMin");
                _PayScaleMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayScaleMin");
                OnPayScaleMinChanged();
            }
        }
        private global::System.Decimal _PayScaleMin;
        partial void OnPayScaleMinChanging(global::System.Decimal value);
        partial void OnPayScaleMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PayScaleMax
        {
            get
            {
                return _PayScaleMax;
            }
            set
            {
                OnPayScaleMaxChanging(value);
                ReportPropertyChanging("PayScaleMax");
                _PayScaleMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayScaleMax");
                OnPayScaleMaxChanged();
            }
        }
        private global::System.Decimal _PayScaleMax;
        partial void OnPayScaleMaxChanging(global::System.Decimal value);
        partial void OnPayScaleMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IncrementPeriod
        {
            get
            {
                return _IncrementPeriod;
            }
            set
            {
                OnIncrementPeriodChanging(value);
                ReportPropertyChanging("IncrementPeriod");
                _IncrementPeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncrementPeriod");
                OnIncrementPeriodChanged();
            }
        }
        private global::System.Int32 _IncrementPeriod;
        partial void OnIncrementPeriodChanging(global::System.Int32 value);
        partial void OnIncrementPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayScale_PayGroup", "PayGroup")]
        public PayGroup PayGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayGroup>("Payroll_Model.FK_PayScale_PayGroup", "PayGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayGroup>("Payroll_Model.FK_PayScale_PayGroup", "PayGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayGroup> PayGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayGroup>("Payroll_Model.FK_PayScale_PayGroup", "PayGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayGroup>("Payroll_Model.FK_PayScale_PayGroup", "PayGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayScale_PayRevision", "PayRevision")]
        public PayRevision PayRevision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayRevision>("Payroll_Model.FK_PayScale_PayRevision", "PayRevision").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayRevision>("Payroll_Model.FK_PayScale_PayRevision", "PayRevision").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayRevision> PayRevisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayRevision>("Payroll_Model.FK_PayScale_PayRevision", "PayRevision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayRevision>("Payroll_Model.FK_PayScale_PayRevision", "PayRevision", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayStage_PayScale", "PayStage")]
        public EntityCollection<PayStage> PayStages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PayStage>("Payroll_Model.FK_PayStage_PayScale", "PayStage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PayStage>("Payroll_Model.FK_PayStage_PayScale", "PayStage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="PayStage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PayStage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PayStage object.
        /// </summary>
        /// <param name="payStageId">Initial value of the PayStageId property.</param>
        /// <param name="payRevisionId">Initial value of the PayRevisionId property.</param>
        /// <param name="payGroupId">Initial value of the PayGroupId property.</param>
        /// <param name="payScaleId">Initial value of the PayScaleId property.</param>
        /// <param name="stageNo">Initial value of the StageNo property.</param>
        /// <param name="stageName">Initial value of the StageName property.</param>
        /// <param name="stagePay">Initial value of the StagePay property.</param>
        /// <param name="stageIncrement">Initial value of the StageIncrement property.</param>
        public static PayStage CreatePayStage(global::System.Int32 payStageId, global::System.Int32 payRevisionId, global::System.Int32 payGroupId, global::System.Int32 payScaleId, global::System.Int32 stageNo, global::System.String stageName, global::System.Decimal stagePay, global::System.Decimal stageIncrement)
        {
            PayStage payStage = new PayStage();
            payStage.PayStageId = payStageId;
            payStage.PayRevisionId = payRevisionId;
            payStage.PayGroupId = payGroupId;
            payStage.PayScaleId = payScaleId;
            payStage.StageNo = stageNo;
            payStage.StageName = stageName;
            payStage.StagePay = stagePay;
            payStage.StageIncrement = stageIncrement;
            return payStage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayStageId
        {
            get
            {
                return _PayStageId;
            }
            set
            {
                if (_PayStageId != value)
                {
                    OnPayStageIdChanging(value);
                    ReportPropertyChanging("PayStageId");
                    _PayStageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PayStageId");
                    OnPayStageIdChanged();
                }
            }
        }
        private global::System.Int32 _PayStageId;
        partial void OnPayStageIdChanging(global::System.Int32 value);
        partial void OnPayStageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayRevisionId
        {
            get
            {
                return _PayRevisionId;
            }
            set
            {
                OnPayRevisionIdChanging(value);
                ReportPropertyChanging("PayRevisionId");
                _PayRevisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayRevisionId");
                OnPayRevisionIdChanged();
            }
        }
        private global::System.Int32 _PayRevisionId;
        partial void OnPayRevisionIdChanging(global::System.Int32 value);
        partial void OnPayRevisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayGroupId
        {
            get
            {
                return _PayGroupId;
            }
            set
            {
                OnPayGroupIdChanging(value);
                ReportPropertyChanging("PayGroupId");
                _PayGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayGroupId");
                OnPayGroupIdChanged();
            }
        }
        private global::System.Int32 _PayGroupId;
        partial void OnPayGroupIdChanging(global::System.Int32 value);
        partial void OnPayGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PayScaleId
        {
            get
            {
                return _PayScaleId;
            }
            set
            {
                OnPayScaleIdChanging(value);
                ReportPropertyChanging("PayScaleId");
                _PayScaleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayScaleId");
                OnPayScaleIdChanged();
            }
        }
        private global::System.Int32 _PayScaleId;
        partial void OnPayScaleIdChanging(global::System.Int32 value);
        partial void OnPayScaleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StageNo
        {
            get
            {
                return _StageNo;
            }
            set
            {
                OnStageNoChanging(value);
                ReportPropertyChanging("StageNo");
                _StageNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StageNo");
                OnStageNoChanged();
            }
        }
        private global::System.Int32 _StageNo;
        partial void OnStageNoChanging(global::System.Int32 value);
        partial void OnStageNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StageName
        {
            get
            {
                return _StageName;
            }
            set
            {
                OnStageNameChanging(value);
                ReportPropertyChanging("StageName");
                _StageName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StageName");
                OnStageNameChanged();
            }
        }
        private global::System.String _StageName;
        partial void OnStageNameChanging(global::System.String value);
        partial void OnStageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal StagePay
        {
            get
            {
                return _StagePay;
            }
            set
            {
                OnStagePayChanging(value);
                ReportPropertyChanging("StagePay");
                _StagePay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StagePay");
                OnStagePayChanged();
            }
        }
        private global::System.Decimal _StagePay;
        partial void OnStagePayChanging(global::System.Decimal value);
        partial void OnStagePayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal StageIncrement
        {
            get
            {
                return _StageIncrement;
            }
            set
            {
                OnStageIncrementChanging(value);
                ReportPropertyChanging("StageIncrement");
                _StageIncrement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StageIncrement");
                OnStageIncrementChanged();
            }
        }
        private global::System.Decimal _StageIncrement;
        partial void OnStageIncrementChanging(global::System.Decimal value);
        partial void OnStageIncrementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayStage_PayGroup", "PayGroup")]
        public PayGroup PayGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayGroup>("Payroll_Model.FK_PayStage_PayGroup", "PayGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayGroup>("Payroll_Model.FK_PayStage_PayGroup", "PayGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayGroup> PayGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayGroup>("Payroll_Model.FK_PayStage_PayGroup", "PayGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayGroup>("Payroll_Model.FK_PayStage_PayGroup", "PayGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayStage_PayRevision", "PayRevision")]
        public PayRevision PayRevision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayRevision>("Payroll_Model.FK_PayStage_PayRevision", "PayRevision").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayRevision>("Payroll_Model.FK_PayStage_PayRevision", "PayRevision").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayRevision> PayRevisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayRevision>("Payroll_Model.FK_PayStage_PayRevision", "PayRevision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayRevision>("Payroll_Model.FK_PayStage_PayRevision", "PayRevision", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_PayStage_PayScale", "PayScale")]
        public PayScale PayScale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayScale>("Payroll_Model.FK_PayStage_PayScale", "PayScale").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayScale>("Payroll_Model.FK_PayStage_PayScale", "PayScale").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PayScale> PayScaleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PayScale>("Payroll_Model.FK_PayStage_PayScale", "PayScale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PayScale>("Payroll_Model.FK_PayStage_PayScale", "PayScale", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="PromotionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PromotionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PromotionType object.
        /// </summary>
        /// <param name="promotionTypeId">Initial value of the PromotionTypeId property.</param>
        /// <param name="promotionTypeName">Initial value of the PromotionTypeName property.</param>
        public static PromotionType CreatePromotionType(global::System.Int32 promotionTypeId, global::System.String promotionTypeName)
        {
            PromotionType promotionType = new PromotionType();
            promotionType.PromotionTypeId = promotionTypeId;
            promotionType.PromotionTypeName = promotionTypeName;
            return promotionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PromotionTypeId
        {
            get
            {
                return _PromotionTypeId;
            }
            set
            {
                if (_PromotionTypeId != value)
                {
                    OnPromotionTypeIdChanging(value);
                    ReportPropertyChanging("PromotionTypeId");
                    _PromotionTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PromotionTypeId");
                    OnPromotionTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _PromotionTypeId;
        partial void OnPromotionTypeIdChanging(global::System.Int32 value);
        partial void OnPromotionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromotionTypeName
        {
            get
            {
                return _PromotionTypeName;
            }
            set
            {
                OnPromotionTypeNameChanging(value);
                ReportPropertyChanging("PromotionTypeName");
                _PromotionTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromotionTypeName");
                OnPromotionTypeNameChanged();
            }
        }
        private global::System.String _PromotionTypeName;
        partial void OnPromotionTypeNameChanging(global::System.String value);
        partial void OnPromotionTypeNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Religion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Religion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Religion object.
        /// </summary>
        /// <param name="religionId">Initial value of the ReligionId property.</param>
        /// <param name="religionName">Initial value of the ReligionName property.</param>
        public static Religion CreateReligion(global::System.Int32 religionId, global::System.String religionName)
        {
            Religion religion = new Religion();
            religion.ReligionId = religionId;
            religion.ReligionName = religionName;
            return religion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReligionId
        {
            get
            {
                return _ReligionId;
            }
            set
            {
                if (_ReligionId != value)
                {
                    OnReligionIdChanging(value);
                    ReportPropertyChanging("ReligionId");
                    _ReligionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReligionId");
                    OnReligionIdChanged();
                }
            }
        }
        private global::System.Int32 _ReligionId;
        partial void OnReligionIdChanging(global::System.Int32 value);
        partial void OnReligionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReligionName
        {
            get
            {
                return _ReligionName;
            }
            set
            {
                OnReligionNameChanging(value);
                ReportPropertyChanging("ReligionName");
                _ReligionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReligionName");
                OnReligionNameChanged();
            }
        }
        private global::System.String _ReligionName;
        partial void OnReligionNameChanging(global::System.String value);
        partial void OnReligionNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Caste_Religion", "Caste")]
        public EntityCollection<Caste> Castes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Caste>("Payroll_Model.FK_Caste_Religion", "Caste");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Caste>("Payroll_Model.FK_Caste_Religion", "Caste", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_Religion", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("Payroll_Model.FK_Employee_Religion", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("Payroll_Model.FK_Employee_Religion", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_Employee_Religion1", "Employee")]
        public EntityCollection<Employee> Employees1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("Payroll_Model.FK_Employee_Religion1", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("Payroll_Model.FK_Employee_Religion1", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="stateName">Initial value of the StateName property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        public static State CreateState(global::System.Int32 stateId, global::System.String stateName, global::System.Int32 countryId)
        {
            State state = new State();
            state.StateId = stateId;
            state.StateName = stateName;
            state.CountryId = countryId;
            return state;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                if (_StateId != value)
                {
                    OnStateIdChanging(value);
                    ReportPropertyChanging("StateId");
                    _StateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateId");
                    OnStateIdChanged();
                }
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_State_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Payroll_Model.FK_State_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Payroll_Model.FK_State_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Payroll_Model.FK_State_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("Payroll_Model.FK_State_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Payroll_Model", "FK_District_State", "District")]
        public EntityCollection<District> Districts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<District>("Payroll_Model.FK_District_State", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<District>("Payroll_Model.FK_District_State", "District", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        /// <param name="statusCode">Initial value of the StatusCode property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        public static Status CreateStatus(global::System.Int32 statusId, global::System.Int32 statusCode, global::System.String statusName)
        {
            Status status = new Status();
            status.StatusId = statusId;
            status.StatusCode = statusCode;
            status.StatusName = statusName;
            return status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusCode
        {
            get
            {
                return _StatusCode;
            }
            set
            {
                OnStatusCodeChanging(value);
                ReportPropertyChanging("StatusCode");
                _StatusCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusCode");
                OnStatusCodeChanged();
            }
        }
        private global::System.Int32 _StatusCode;
        partial void OnStatusCodeChanging(global::System.Int32 value);
        partial void OnStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Payroll_Model", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }

    #endregion

    
}
